//
// File generated by rootcint at Thu Jul 28 04:24:02 2016

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME srcdIGEMDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "GEMDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void GEMClusterStruct_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_GEMClusterStruct(void *p = 0);
   static void *newArray_GEMClusterStruct(Long_t size, void *p);
   static void delete_GEMClusterStruct(void *p);
   static void deleteArray_GEMClusterStruct(void *p);
   static void destruct_GEMClusterStruct(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::GEMClusterStruct*)
   {
      ::GEMClusterStruct *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::GEMClusterStruct >(0);
      static ::ROOT::TGenericClassInfo 
         instance("GEMClusterStruct", ::GEMClusterStruct::Class_Version(), "./include/GEMDataStruct.h", 7,
                  typeid(::GEMClusterStruct), DefineBehavior(ptr, ptr),
                  &::GEMClusterStruct::Dictionary, isa_proxy, 4,
                  sizeof(::GEMClusterStruct) );
      instance.SetNew(&new_GEMClusterStruct);
      instance.SetNewArray(&newArray_GEMClusterStruct);
      instance.SetDelete(&delete_GEMClusterStruct);
      instance.SetDeleteArray(&deleteArray_GEMClusterStruct);
      instance.SetDestructor(&destruct_GEMClusterStruct);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::GEMClusterStruct*)
   {
      return GenerateInitInstanceLocal((::GEMClusterStruct*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::GEMClusterStruct*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

namespace ROOT {
   void HyCalClusterStruct_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HyCalClusterStruct(void *p = 0);
   static void *newArray_HyCalClusterStruct(Long_t size, void *p);
   static void delete_HyCalClusterStruct(void *p);
   static void deleteArray_HyCalClusterStruct(void *p);
   static void destruct_HyCalClusterStruct(void *p);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::HyCalClusterStruct*)
   {
      ::HyCalClusterStruct *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HyCalClusterStruct >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HyCalClusterStruct", ::HyCalClusterStruct::Class_Version(), "./include/GEMDataStruct.h", 51,
                  typeid(::HyCalClusterStruct), DefineBehavior(ptr, ptr),
                  &::HyCalClusterStruct::Dictionary, isa_proxy, 4,
                  sizeof(::HyCalClusterStruct) );
      instance.SetNew(&new_HyCalClusterStruct);
      instance.SetNewArray(&newArray_HyCalClusterStruct);
      instance.SetDelete(&delete_HyCalClusterStruct);
      instance.SetDeleteArray(&deleteArray_HyCalClusterStruct);
      instance.SetDestructor(&destruct_HyCalClusterStruct);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::HyCalClusterStruct*)
   {
      return GenerateInitInstanceLocal((::HyCalClusterStruct*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HyCalClusterStruct*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
atomic_TClass_ptr GEMClusterStruct::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *GEMClusterStruct::Class_Name()
{
   return "GEMClusterStruct";
}

//______________________________________________________________________________
const char *GEMClusterStruct::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GEMClusterStruct*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int GEMClusterStruct::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::GEMClusterStruct*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void GEMClusterStruct::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GEMClusterStruct*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *GEMClusterStruct::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::GEMClusterStruct*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HyCalClusterStruct::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HyCalClusterStruct::Class_Name()
{
   return "HyCalClusterStruct";
}

//______________________________________________________________________________
const char *HyCalClusterStruct::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HyCalClusterStruct*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HyCalClusterStruct::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::HyCalClusterStruct*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HyCalClusterStruct::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HyCalClusterStruct*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HyCalClusterStruct::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::HyCalClusterStruct*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void GEMClusterStruct::Streamer(TBuffer &R__b)
{
   // Stream an object of class GEMClusterStruct.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(GEMClusterStruct::Class(),this);
   } else {
      R__b.WriteClassBuffer(GEMClusterStruct::Class(),this);
   }
}

//______________________________________________________________________________
void GEMClusterStruct::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class GEMClusterStruct.
      TClass *R__cl = ::GEMClusterStruct::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_charge", &x_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_charge", &y_charge);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "z", &z);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x_size", &x_size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y_size", &y_size);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_GEMClusterStruct(void *p) {
      return  p ? new(p) ::GEMClusterStruct : new ::GEMClusterStruct;
   }
   static void *newArray_GEMClusterStruct(Long_t nElements, void *p) {
      return p ? new(p) ::GEMClusterStruct[nElements] : new ::GEMClusterStruct[nElements];
   }
   // Wrapper around operator delete
   static void delete_GEMClusterStruct(void *p) {
      delete ((::GEMClusterStruct*)p);
   }
   static void deleteArray_GEMClusterStruct(void *p) {
      delete [] ((::GEMClusterStruct*)p);
   }
   static void destruct_GEMClusterStruct(void *p) {
      typedef ::GEMClusterStruct current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::GEMClusterStruct

//______________________________________________________________________________
void HyCalClusterStruct::Streamer(TBuffer &R__b)
{
   // Stream an object of class HyCalClusterStruct.

   if (R__b.IsReading()) {
      R__b.ReadClassBuffer(HyCalClusterStruct::Class(),this);
   } else {
      R__b.WriteClassBuffer(HyCalClusterStruct::Class(),this);
   }
}

//______________________________________________________________________________
void HyCalClusterStruct::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HyCalClusterStruct.
      TClass *R__cl = ::HyCalClusterStruct::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "x", &x);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "y", &y);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "energy", &energy);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_HyCalClusterStruct(void *p) {
      return  p ? new(p) ::HyCalClusterStruct : new ::HyCalClusterStruct;
   }
   static void *newArray_HyCalClusterStruct(Long_t nElements, void *p) {
      return p ? new(p) ::HyCalClusterStruct[nElements] : new ::HyCalClusterStruct[nElements];
   }
   // Wrapper around operator delete
   static void delete_HyCalClusterStruct(void *p) {
      delete ((::HyCalClusterStruct*)p);
   }
   static void deleteArray_HyCalClusterStruct(void *p) {
      delete [] ((::HyCalClusterStruct*)p);
   }
   static void destruct_HyCalClusterStruct(void *p) {
      typedef ::HyCalClusterStruct current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOT for class ::HyCalClusterStruct

/********************************************************
* src/GEMDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableGEMDict();

extern "C" void G__set_cpp_environmentGEMDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("GEMDataStruct.h");
  G__cpp_reset_tagtableGEMDict();
}
#include <new>
extern "C" int G__cpp_dllrevGEMDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* GEMClusterStruct */
static int G__GEMDict_168_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GEMClusterStruct* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GEMClusterStruct[n];
     } else {
       p = new((void*) gvp) GEMClusterStruct[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GEMClusterStruct;
     } else {
       p = new((void*) gvp) GEMClusterStruct;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GEMClusterStruct* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GEMClusterStruct(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
     } else {
       p = new((void*) gvp) GEMClusterStruct(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3])
, (float) G__double(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GEMClusterStruct(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
     } else {
       p = new((void*) gvp) GEMClusterStruct(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]), (float) G__double(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GEMClusterStruct(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
     } else {
       p = new((void*) gvp) GEMClusterStruct(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new GEMClusterStruct((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
     } else {
       p = new((void*) gvp) GEMClusterStruct((float) G__double(libp->para[0]), (float) G__double(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GEMClusterStruct* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new GEMClusterStruct(*(GEMClusterStruct*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) GEMClusterStruct(*(GEMClusterStruct*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GEMClusterStruct*) G__getstructoffset())->SetEnergy((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GEMClusterStruct*) G__getstructoffset())->SetX((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GEMClusterStruct*) G__getstructoffset())->SetY((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GEMClusterStruct*) G__getstructoffset())->SetXCharge((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GEMClusterStruct*) G__getstructoffset())->SetYCharge((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GEMClusterStruct*) G__getstructoffset())->SetZ((float) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) GEMClusterStruct::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GEMClusterStruct::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) GEMClusterStruct::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      GEMClusterStruct::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((GEMClusterStruct*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GEMClusterStruct::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GEMClusterStruct::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) GEMClusterStruct::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_168_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) GEMClusterStruct::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef GEMClusterStruct G__TGEMClusterStruct;
static int G__GEMDict_168_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (GEMClusterStruct*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((GEMClusterStruct*) (soff+(sizeof(GEMClusterStruct)*i)))->~G__TGEMClusterStruct();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (GEMClusterStruct*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((GEMClusterStruct*) (soff))->~G__TGEMClusterStruct();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GEMDict_168_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   GEMClusterStruct* dest = (GEMClusterStruct*) G__getstructoffset();
   *dest = *(GEMClusterStruct*) libp->para[0].ref;
   const GEMClusterStruct& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HyCalClusterStruct */
static int G__GEMDict_169_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HyCalClusterStruct* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HyCalClusterStruct[n];
     } else {
       p = new((void*) gvp) HyCalClusterStruct[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HyCalClusterStruct;
     } else {
       p = new((void*) gvp) HyCalClusterStruct;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HyCalClusterStruct* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HyCalClusterStruct(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
   } else {
     p = new((void*) gvp) HyCalClusterStruct(
(float) G__double(libp->para[0]), (float) G__double(libp->para[1])
, (float) G__double(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HyCalClusterStruct* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HyCalClusterStruct(*(HyCalClusterStruct*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HyCalClusterStruct(*(HyCalClusterStruct*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HyCalClusterStruct::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HyCalClusterStruct::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HyCalClusterStruct::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HyCalClusterStruct::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HyCalClusterStruct*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HyCalClusterStruct::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HyCalClusterStruct::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HyCalClusterStruct::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__GEMDict_169_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HyCalClusterStruct::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HyCalClusterStruct G__THyCalClusterStruct;
static int G__GEMDict_169_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HyCalClusterStruct*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HyCalClusterStruct*) (soff+(sizeof(HyCalClusterStruct)*i)))->~G__THyCalClusterStruct();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HyCalClusterStruct*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HyCalClusterStruct*) (soff))->~G__THyCalClusterStruct();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__GEMDict_169_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HyCalClusterStruct* dest = (HyCalClusterStruct*) G__getstructoffset();
   *dest = *(HyCalClusterStruct*) libp->para[0].ref;
   const HyCalClusterStruct& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* GEMClusterStruct */

/* HyCalClusterStruct */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncGEMDict {
 public:
  G__Sizep2memfuncGEMDict(): p(&G__Sizep2memfuncGEMDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncGEMDict::*p)();
};

size_t G__get_sizep2memfuncGEMDict()
{
  G__Sizep2memfuncGEMDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceGEMDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct))) {
     GEMClusterStruct *G__Lderived;
     G__Lderived=(GEMClusterStruct*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct),G__get_linked_tagnum(&G__GEMDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct))) {
     HyCalClusterStruct *G__Lderived;
     G__Lderived=(HyCalClusterStruct*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct),G__get_linked_tagnum(&G__GEMDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableGEMDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* GEMClusterStruct */
static void G__setup_memvarGEMClusterStruct(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct));
   { GEMClusterStruct *p; p=(GEMClusterStruct*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),102,0,0,-1,-1,-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),102,0,0,-1,-1,-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x_charge)-(long)(p)),102,0,0,-1,-1,-1,1,"x_charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y_charge)-(long)(p)),102,0,0,-1,-1,-1,1,"y_charge=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),102,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->z)-(long)(p)),102,0,0,-1,-1,-1,1,"z=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->x_size)-(long)(p)),105,0,0,-1,-1,-1,1,"x_size=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y_size)-(long)(p)),105,0,0,-1,-1,-1,1,"y_size=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GEMDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HyCalClusterStruct */
static void G__setup_memvarHyCalClusterStruct(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct));
   { HyCalClusterStruct *p; p=(HyCalClusterStruct*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->x)-(long)(p)),102,0,0,-1,-1,-1,1,"x=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->y)-(long)(p)),102,0,0,-1,-1,-1,1,"y=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->energy)-(long)(p)),102,0,0,-1,-1,-1,1,"energy=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__GEMDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarGEMDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncGEMClusterStruct(void) {
   /* GEMClusterStruct */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct));
   G__memfunc_setup("GEMClusterStruct",1600,G__GEMDict_168_0_1, 105, G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GEMClusterStruct",1600,G__GEMDict_168_0_2, 105, G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct), -1, 0, 5, 1, 1, 0, 
"f - - 0 - xi f - - 0 - yi "
"f - - 0 '0.' cix f - - 0 '0.' ciy "
"f - - 0 '0' ei", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GEMClusterStruct",1600,G__GEMDict_168_0_3, 105, G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct), -1, 0, 1, 1, 1, 0, "u 'GEMClusterStruct' - 11 - gem_cluster", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetEnergy",918,G__GEMDict_168_0_4, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - e", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetX",388,G__GEMDict_168_0_5, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - xp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetY",389,G__GEMDict_168_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - xp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetXCharge",974,G__GEMDict_168_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - xp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetYCharge",975,G__GEMDict_168_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - xp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetZ",390,G__GEMDict_168_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "f - - 0 - xp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GEMDict_168_0_10, 85, G__get_linked_tagnum(&G__GEMDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&GEMClusterStruct::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GEMDict_168_0_11, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GEMClusterStruct::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GEMDict_168_0_12, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&GEMClusterStruct::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GEMDict_168_0_13, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&GEMClusterStruct::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GEMDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GEMDict_168_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GEMDict_168_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GEMClusterStruct::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GEMDict_168_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GEMClusterStruct::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GEMDict_168_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&GEMClusterStruct::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GEMDict_168_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&GEMClusterStruct::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~GEMClusterStruct", 1726, G__GEMDict_168_0_22, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GEMDict_168_0_23, (int) ('u'), G__get_linked_tagnum(&G__GEMDictLN_GEMClusterStruct), -1, 1, 1, 1, 1, 0, "u 'GEMClusterStruct' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHyCalClusterStruct(void) {
   /* HyCalClusterStruct */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct));
   G__memfunc_setup("HyCalClusterStruct",1848,G__GEMDict_169_0_1, 105, G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HyCalClusterStruct",1848,G__GEMDict_169_0_2, 105, G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct), -1, 0, 3, 1, 1, 0, 
"f - - 0 - xi f - - 0 - yi "
"f - - 0 - energyi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HyCalClusterStruct",1848,G__GEMDict_169_0_3, 105, G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct), -1, 0, 1, 1, 1, 0, "u 'HyCalClusterStruct' - 11 - hycal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__GEMDict_169_0_4, 85, G__get_linked_tagnum(&G__GEMDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HyCalClusterStruct::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__GEMDict_169_0_5, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HyCalClusterStruct::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__GEMDict_169_0_6, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HyCalClusterStruct::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__GEMDict_169_0_7, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HyCalClusterStruct::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__GEMDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__GEMDict_169_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__GEMDict_169_0_12, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HyCalClusterStruct::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__GEMDict_169_0_13, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HyCalClusterStruct::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__GEMDict_169_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HyCalClusterStruct::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__GEMDict_169_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HyCalClusterStruct::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HyCalClusterStruct", 1974, G__GEMDict_169_0_16, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__GEMDict_169_0_17, (int) ('u'), G__get_linked_tagnum(&G__GEMDictLN_HyCalClusterStruct), -1, 1, 1, 1, 1, 0, "u 'HyCalClusterStruct' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncGEMDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalGEMDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcGEMDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__GEMDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__GEMDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__GEMDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__GEMDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__GEMDictLN_GEMClusterStruct = { "GEMClusterStruct" , 99 , -1 };
G__linked_taginfo G__GEMDictLN_HyCalClusterStruct = { "HyCalClusterStruct" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableGEMDict() {
  G__GEMDictLN_TClass.tagnum = -1 ;
  G__GEMDictLN_TBuffer.tagnum = -1 ;
  G__GEMDictLN_TMemberInspector.tagnum = -1 ;
  G__GEMDictLN_TObject.tagnum = -1 ;
  G__GEMDictLN_GEMClusterStruct.tagnum = -1 ;
  G__GEMDictLN_HyCalClusterStruct.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableGEMDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__GEMDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__GEMDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__GEMDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__GEMDictLN_TObject);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GEMDictLN_GEMClusterStruct),sizeof(GEMClusterStruct),-1,325376,(char*)NULL,G__setup_memvarGEMClusterStruct,G__setup_memfuncGEMClusterStruct);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__GEMDictLN_HyCalClusterStruct),sizeof(HyCalClusterStruct),-1,325376,(char*)NULL,G__setup_memvarHyCalClusterStruct,G__setup_memfuncHyCalClusterStruct);
}
extern "C" void G__cpp_setupGEMDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupGEMDict()");
  G__set_cpp_environmentGEMDict();
  G__cpp_setup_tagtableGEMDict();

  G__cpp_setup_inheritanceGEMDict();

  G__cpp_setup_typetableGEMDict();

  G__cpp_setup_memvarGEMDict();

  G__cpp_setup_memfuncGEMDict();
  G__cpp_setup_globalGEMDict();
  G__cpp_setup_funcGEMDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncGEMDict();
  return;
}
class G__cpp_setup_initGEMDict {
  public:
    G__cpp_setup_initGEMDict() { G__add_setup_func("GEMDict",(G__incsetup)(&G__cpp_setupGEMDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initGEMDict() { G__remove_setup_func("GEMDict"); }
};
G__cpp_setup_initGEMDict G__cpp_setup_initializerGEMDict;

